version: '3.9'

services:
  mongodb:
    image: mongo
    volumes:
      - ./volumes/mongodb:/data/db:rw
    networks:
    - cad_backend_network

  authentication_service:
    build: 
      context: .
      dockerfile: ./authentication_service/Dockerfile
    ports:
      - "4001:4000"
    depends_on:
      - mongodb
    environment:
      - JWT_SECRET_KEY="9p4LA9^9@n4@z6sVTE6r3#hNhseHB8AwnzQ"
      - SERVER_PORT=4000
      - MONGODB_CONNECTION_STRING=mongodb+srv://simba:theLionKing@cluster-fra.vm27r7k.mongodb.net/authentication
      - TENANT_SERVICE_URL=http://tenant_service:4000
    networks:
    - cad_backend_network

  tenant_service:
    build: 
      context: .
      dockerfile: ./tenant_service/Dockerfile
    ports:
      - "4002:4000"
    depends_on:
      - mongodb
    environment:
      - JWT_SECRET_KEY="9p4LA9^9@n4@z6sVTE6r3#hNhseHB8AwnzQ"
      - SERVER_PORT=4000
      - MONGODB_CONNECTION_STRING=mongodb+srv://simba:theLionKing@cluster-fra.vm27r7k.mongodb.net/authentication
    networks:
    - cad_backend_network

  transaction_service:
    build: 
      context: .
      dockerfile: ./transaction_service/Dockerfile
    ports:
      - "4003:4000"
    depends_on:
      - mongodb
    environment:
      - SERVER_PORT=4000
      - MONGODB_CONNECTION_STRING=mongodb+srv://simba:theLionKing@cluster-fra.vm27r7k.mongodb.net/budget-tracker
      - JWT_SECRET_KEY="9p4LA9^9@n4@z6sVTE6r3#hNhseHB8AwnzQ"
    networks:
    - cad_backend_network
    
  report_service:
    build: 
      context: .
      dockerfile: ./report_service/Dockerfile
    ports:
      - "4004:4000"
    depends_on:
      - mongodb
    environment:
      - SERVER_PORT=4000
      - MONGODB_CONNECTION_STRING=mongodb+srv://simba:theLionKing@cluster-fra.vm27r7k.mongodb.net/budget-tracker
      - JWT_SECRET_KEY="9p4LA9^9@n4@z6sVTE6r3#hNhseHB8AwnzQ"
      - TRANSACTION_SERVICE_URL=http://transaction_service:4000
      - EXECUTION_MODE=service
    networks:
    - cad_backend_network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/prometheus:/etc/prometheus
    networks:
    - cad_backend_network

  grafana:
    image: grafana/grafana-oss:9.1.0
    container_name: grafana
    # if you are running as root then set it to 0 else find the right id with the id command
    user: "0"
    volumes:
    # defining our main config parameters for provisioning if we have datasource
    # commented it out as for now we do not need it
    - ./infrastructure/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources/
   # defining our main config parameters for provisioning for dashboards
    - ./infrastructure/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards/
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - cad_backend_network

#  grafana:
#    image: grafana/grafana
    #build:
    #  context: ""
    #  dockerfile: ./infrastructure/grafana/Dockerfile
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    volumes:
#      - ./infrsturcture/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
#      - ./infrsturcture/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      #- ./infrsturcture/grafana/dashboards:/etc/grafana/dashboards
#      - grafana-data:/var/lib/grafana
#      - ./insfrastructure/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
#      - ./insfrastructure/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources/
#      - ./insfrastructure/grafana/dashboards:/etc/grafana/dashboards
#      - grafana-data:/var/lib/grafana
#      - ./insfrastructure/grafana/grafana.ini:/etc/grafana/grafana.ini
#      - ./insfrastructure/grafana/provisioning/dashboards/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
#      - ./insfrastructure/grafana/provisioning/datasources/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
#      - ./insfrastructure/grafana/dashboards:/var/lib/grafana/dashboards
#      - ./volumes/grafana:/var/lib/grafana
#      - ./volumes/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
#      - ./volumes/grafana/dashboards:/var/lib/grafana/dashboards
#    networks:
#      - cad_backend_network

  frontend:
    build: 
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - "80:80"
    networks:
    - cad_backend_network

networks:
  cad_backend_network:
    name: cad_backend_network

volumes:
  grafana-data:
