version: '3.9'

services:
  mongodb:
    image: mongo
    volumes:
      - ./volumes/mongodb:/data/db:rw
    networks:
    - cad_backend_network

  authentication_service:
    build: 
      context: .
      dockerfile: ./authentication_service/Dockerfile
    ports:
      - "4001:4000"
    depends_on:
      - mongodb
    environment:
      - JWT_SECRET_KEY="9p4LA9^9@n4@z6sVTE6r3#hNhseHB8AwnzQ"
      - SERVER_PORT=4000
      - MONGODB_CONNECTION_STRING=mongodb://mongodb:27017/authentication
      - TENANT_SERVICE_URL=http://tenant_service:4000
    networks:
    - cad_backend_network

  tenant_service:
    build: 
      context: .
      dockerfile: ./tenant_service/Dockerfile
    ports:
      - "4002:4000"
    depends_on:
      - mongodb
    environment:
      - JWT_SECRET_KEY="9p4LA9^9@n4@z6sVTE6r3#hNhseHB8AwnzQ"
      - SERVER_PORT=4000
      - MONGODB_CONNECTION_STRING=mongodb://mongodb:27017/authentication
    networks:
    - cad_backend_network

  transaction_service:
    build: 
      context: .
      dockerfile: ./transaction_service/Dockerfile
    ports:
      - "4003:4000"
    depends_on:
      - mongodb
    environment:
      - SERVER_PORT=4000
      - MONGODB_CONNECTION_STRING=mongodb://mongodb:27017/transaction
      - JWT_SECRET_KEY="9p4LA9^9@n4@z6sVTE6r3#hNhseHB8AwnzQ"
      - AZURE_BLOB_STORAGE_CONNECTION_STRING=<Bucket connection string>
      - AZURE_BLOB_STORAGE_CONTAINER_NAME=budgettrackerobjects-container
    networks:
    - cad_backend_network

  report_service:
    build: 
      context: .
      dockerfile: ./report_service/Dockerfile
    ports:
      - "4004:4000"
    depends_on:
      - mongodb
    environment:
      - SERVER_PORT=4000
      - MONGODB_CONNECTION_STRING=mongodb://mongodb:27017/report
      - JWT_SECRET_KEY="9p4LA9^9@n4@z6sVTE6r3#hNhseHB8AwnzQ"
      - TRANSACTION_SERVICE_URL=http://transaction_service:4000
      - EXECUTION_MODE=service
    networks:
    - cad_backend_network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/prometheus:/etc/prometheus
    networks:
    - cad_backend_network

  grafana:
    build: 
      context: ./infrastructure/grafana
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - cad_backend_network

  frontend:
    build: 
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - "81:80"
    networks:
    - cad_backend_network

  start_page:
    build: 
      context: .
      dockerfile: ./start_page/Dockerfile
    ports:
      - "82:80"
    networks:
    - cad_backend_network

networks:
  cad_backend_network:
    name: cad_backend_network